[project]
name = "menagerie"
version = "0.1.0"
description = "Implementations of various models and interesting ideas in AI."
authors = [
    { name = "Nick Wall", email = "46641379+walln@users.noreply.github.com" }
]
dependencies = [
    "torch>=2.2.2",
    "torchvision>=0.17.2",
    "datasets>=2.18.0",
    "rich>=13.7.1",
    "lightning>=2.2.1",
    "torchmetrics>=1.3.2",
    "albumentations>=1.4.3",
    "wandb>=0.16.6",
    "typer[all]>=0.12.3",
    "transformers>=4.40.1",
    "accelerate>=0.30.0",
    "trl>=0.8.6",
    "peft>=0.10.0",
    "deepspeed>=0.14.2",
    "bitsandbytes>=0.43.1",
    "triton>=2.3.0",
]
readme = "README.md"
requires-python = ">= 3.12"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pre-commit>=3.7.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.29.4",
    "pytest>=8.1.1",
    "asitop; sys_platform == 'darwin'",
    "nvitop>=1.3.2",
]

[tool.rye.scripts]
monitor = { cmd = "nvtop" }


[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/menagerie"]

[tool.ruff]
src = ["src/**", "tests/**"]

[tool.ruff.lint]
pydocstyle.convention = "google"
# See all rules at https://docs.astral.sh/ruff/rules/
select = [
    "E",      # pycodestyle
    "W",      # pycodestyle
    "F",      # Pyflakes
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "D",      # pydocstyle
    "I",      # isort
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
    "PT",     # flake8-pytest-style
    "RUF",    # Ruff-specific rules
    "FBT001", # flake8-boolean-trap
]

ignore = [
    "E501", # "Line too long"
    # -> line length already regulated by the formatter
    "SIM102", # "Use a single `if` statement instead of nested `if` statements"
    # -> too restrictive
]
